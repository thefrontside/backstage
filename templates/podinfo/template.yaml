apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: humanitec-app
  title: Standard Microservice
  description: Microservice project that uses Docker and deploys to Humanitec
spec:
  owner: john@example.com
  type: website

  parameters:
    - title: Configure Your New Application
      required:
        - repoUrl
        - application
      properties:
        application: # for catalog metadata, description of the repo, used for "repo" of octokit (must match what goes into repourl)
          title: Application Name
          type: string
          description: Name of your new Humanitec application
          ui:autofocus: true
          ui:options:
            rows: 5
        repoUrl: # creating github repo and for registering catalog component
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - name: Fetch App Template
      id: fetch-base
      action: fetch:template
      input:
        url: ../../templates/podinfo/template
        copyWithoutRender: ["**/build-upload.yml"]
        cookiecutterCompat: true
        values:
          name: ${{ parameters.application }}
          orgId: 'the-frontside-software-inc'
          appId: ${{ parameters.application }}
    - name: Create Repository on Github
      id: publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.application }}
        repoUrl: ${{ parameters.repoUrl }}
    - name: Build/Upload Image to Google
      id: build # id CANNOT HAVE DASHES
      action: frontside:build-push
      input:
        githubOrg: 'thefrontside' # ðŸš¨ change later, should use our own repourlpicker that lets us output the different parts separately
        repo: ${{ parameters.application }}
    - name: Create Humanitec Deployment
      id: deploy-humanitec
      action: frontside:humanitec
      input:
        imageTag: ${{ steps.build.output.runId }}
        orgId: "the-frontside-software-inc"
        app: ${{ parameters.application }}
    - name: Register Component in Backstage
      id: register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
